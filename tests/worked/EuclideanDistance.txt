type Point is record
    var x: real
    var y: real
end

routine squareRoot(a: real): real is
    var low : real is 0.0
    var high : real is 1000000000.0
    while low + 1.0 < high loop
        var mid : real is (low + high) / 2
        if mid * mid <= a then
            low := mid
        else
            high := mid
        end
    end
    return low
end

routine eucledianDistance(p1: Point, p2: Point): real =>
    squareRoot((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))
